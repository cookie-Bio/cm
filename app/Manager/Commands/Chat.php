<?php


namespace Manager\Commands;


use Exception;
use Manager\Models\ChatsQuery;
use Manager\Models\Utils;

trait Chat
{

    /**
     * –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç
     */
    public function chatRegistration()
    {
        try {
            $this->vk->isAdmin(-$this->vk->getVars('group_id'), $this->vk->getVars('peer_id'));
        } catch (Exception $e) {
            if ($e->getCode() === 0) $this->vk->reply('–¢—ã –º–µ–Ω—è –æ–±–º–∞–Ω—É–ª!!!');
            return;
        }

        $this->db->createChatRecord($this->vk->getVars('chat_id'))
            ? $this->vk->reply('–≤–µ—Ä—é-–≤–µ—Ä—é') : $this->vk->reply('–ê –º—ã —Ä–∞–Ω—å—à–µ –≥–¥–µ-—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–ª–∏—Å—å?');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
     */
    public function snowAllSettings()
    {
        $settings = $this->db->snowAllSettings();
        $text = "\n–î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n";
        $text .= $settings['ban']['description'] . ': ' . $settings['ban']['default'] . PHP_EOL;
        $text .= $settings['mute']['description'] . ': ' . $settings['mute']['action'] . PHP_EOL;
        $text .= $settings[ChatsQuery::MAX_WORDS]['description'] . ': ' . $settings[ChatsQuery::MAX_WORDS]['default'] . PHP_EOL. PHP_EOL;
        $text .= $settings[ChatsQuery::WELCOME_MESSAGE_TEXT]['description'] . ': ' . Utils::boolToSmile($settings[ChatsQuery::WELCOME_MESSAGE_TEXT]['action']) . PHP_EOL;
        $text .= $settings[ChatsQuery::EXIT_MESSAGE_TEXT]['description'] . ': ' . Utils::boolToSmile($settings[ChatsQuery::EXIT_MESSAGE_TEXT]['action']) . PHP_EOL;
        $this->vk->reply($text);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–ª–ª–±–µ–∫ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏—Ö –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å
     */
    public function sendCallbackSettings()
    {
        $button = null;
        $i = 0;
        foreach ($this->db->showAllSettings() as $setting => $option) {
            $button[$i][] = $this->vk->buttonCallback($option['description'], $option['status'] ? 'green' : 'red');
            $i++;
        }
        $button[$i][] = $this->vk->buttonCallback('‚è™', 'white', ['gui_settings' => 'info']);
        $button[$i][] = $this->vk->buttonCallback('‚è©', 'white', ['gui_settings' => 'info']);

        Utils::var_dumpToStdout($button);

        $this->vk
            ->msg('üîß Gui Settings')
            ->kbd($button, true)
            ->send();
    }
    //TODO –ù–∞–ø–∏—Å–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≥—É–∏
    //TODO –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–∫—É –¥–ª—è –≤–∞—Ä–Ω–∞ –∑–∞ —Å—Å—ã–ª–∫–∏
    //TODO –Ω–∞–ø–∏—Å–∞—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–ø–∞–º —Å–ª–æ–≤
}